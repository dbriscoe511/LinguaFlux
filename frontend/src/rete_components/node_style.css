/* sockets */
.socket{
    width: 16px;
    height: 16px;
    border: 1px solid rgb(48, 48, 48);
}
.socket:hover{
    border: 3px solid rgb(48, 48, 48);
}

.socket.input{
    margin-left: -8px; /*half the width*/
}
.socket.output{
    margin-right: -8px;/*half the width*/
}

.socket.string-value {
    background: rgb(255, 113, 91);
}
.socket.number-value {
background: rgb(13, 104, 116);
}
.socket.array {
background: rgb(49, 0, 68);
}
.socket.default {
background: grey;
}

/* connections */
.connection .main-path {
    fill: none;
    stroke-width: 5px;
    stroke: rgb(148, 148, 148);
}

body{
   margin:0;
}

.context-menu>.item{
    border-bottom: 1px solid #e3c100c2;
    background-color: rgba(61, 61, 61, 0.8)
}

.context-menu>.search{
    border-bottom: 1px solid #e3c100c2 !important; /*this is overriden by inline css that comes with rete for some reason*/
    background-color: rgba(61, 61, 61, 0.8) !important;
}

.App {
    font-family: sans-serif;
    text-align: center;
    background-color: rgb(58, 58, 58);
  }

/* nodes */
.node{
    box-shadow:6px 6px 13px 2px rgba(0,0,0,0.75);
    background: rgb(99, 93, 92);
    border-color:rgb(71, 67, 66)
}

/* should apply shadow here to make it go behind the connections. however, it stays in front of connections even here.
.node:before{
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    box-shadow:6px 6px 13px 2px rgba(0,0,0,0.75);
    z-index: -10000;
}*/

/* disable hover effect for now (same as unselected)*/
.node:hover {
    background: rgb(99, 93, 92);
}

.node.selected {
    background: rgb(99, 93, 92);
    border: 3px solid #e3c000;
}

.node .title {
    padding: 5px;
    border-radius: inherit;
}

.outputs,
.controls,
.inputs {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

.input:not(:last-child),
.output:not(:last-child) {
  margin-bottom: 10px;
}
/* controllers */
.default-text-item {
    background: rgba(138, 131, 129);
    border-color:rgb(71, 67, 66);
    color: rgb(255, 255, 255);
    border-radius: 5px;
    font-size: small;
}

/* chat box component */

.chat-control .input-area .input-wrapper {
    display: flex;
    font-size: small;
    background-color: rgba(138, 131, 129);
    border-radius: 5px;
    border: 1px solid black;
    padding: 5px;
  }
  
  .chat-control .input-area .send-button {
    position: relative;
    top: 5px;
    height: 2.5em;
    background-color: transparent;
    border-radius: 5px;
    color: rgb(255, 255, 255);
    border: none;
  }
  
  .chat-control .input-area .send-button:hover {
    background-color: rgb(167, 196, 181);
    border: 1px solid black;
  }

  .user-input {
    width: 400px;
    height: 100px;
    border: none;
    background-color: transparent;
    resize: none;
    color: rgb(255, 255, 255);
}


.chat-control{
    font-size: small;
    text-align: left;
    min-width: 400px;
    max-width: 600px;
    min-height: 100px;
    resize: both;
    color: rgb(255, 255, 255);
    border: 1px solid black;
    border-radius: 5px;
    padding: 5px;
}
.message {
    overflow: auto;
}

.chat-control .resize-handle {
    width: 16px;
    height: 16px;
    background: url("data:image/svg+xml,%3Csvg width='32' height='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M22.667 8L24 9.333l-6.333 6.334L16 14zm-2.667 2.667l3.333-3.334L21.333 10l-3.333 3.333zm-6 6l-6.333 6.333L8 22.667l6.333-6.333zm-2.667 2.667l3.333-3.333-1.333-1.334-3.333 3.333z' fill='%23000' fill-rule='evenodd'/%3E%3C/svg%3E");
    background-size: 16px 16px;
    cursor: nwse-resize;
    position: absolute;
    bottom: 0;
    right: 0;
    z-index: 1;
}

/* disable node dragging when it is being resized */
.chat-control.resizing * {
    pointer-events: none;
  } 
  

